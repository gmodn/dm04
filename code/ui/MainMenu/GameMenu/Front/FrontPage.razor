@using System
@using Sandbox;
@using Sandbox.MenuSystem;
@using Sandbox.UI;
@namespace Sandbox.UI.GameMenu
@attribute [StyleSheet]

<root style="flex-direction: column;">

    <div class="game-title">ass</div>

    <div class="controls">

        @if ( Game.InGame )
        {
            <a class="button" onclick=@Game.Menu.HideMenu>RESUME GAME</a>
            <a class="button" onclick=@Game.Menu.CancelLoading>DISCONNECT</a>
        }
        else if (Game.Menu.Lobby != null)
        {
            <a class="button" href="/lobby">RETURN TO SERVER</a>
        }
        else;
        <span style="height: 20px;"></span>
        <a class="button" href="/servers">FIND SERVERS</a>
        <a class="button" onclick=@CreateNewLobby>CREATE SERVER</a>
        <a class="button" href="/settings">OPTIONS</a>
        <a class="button" href="/about">ABOUT</a>
        <a class="button" onclick=@XGUITest>Xgui test</a>
        <a class="button" @onclick=@Game.Menu.Close>QUIT</a>

    </div>

    
    <div class="ptnotif">THIS GAMEMODE IS A WORK IN PROGRESS</div>
</root>

@code
{
    void LoadSavedGame()
    {
        this.Navigate( "/load" );
    }

    async Task CreateNewLobby()
    {
        await Game.Menu.CreateLobbyAsync( 64, "game", true );
        // we will navigate to lobby when it's ready
    }

    async Task XGUITest()
    {
        //create xgui panel
    }

    void LeaveGame()
    {
        Game.Menu.LeaveServer("Leaving");
    }

    public override void Tick()
    {
        base.Tick();
    }
}
